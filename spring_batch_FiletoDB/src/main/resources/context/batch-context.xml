<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


	<jdbc:initialize-database data-source="dataSource"
		ignore-failures="DROPS">
		<jdbc:script
			location="org/springframework/batch/core/schema-drop-oracle10g.sql" />
		<jdbc:script location="org/springframework/batch/core/schema-oracle10g.sql" />

		<jdbc:script location="batch_drop_table.sql" />
		<jdbc:script location="batch_create_table.sql" />
	</jdbc:initialize-database>

	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean"
		p:transactionManager-ref="transactionManager" p:dataSource-ref="dataSource"
		p:tablePrefix="BATCH_" p:isolationLevelForCreate="ISOLATION_SERIALIZABLE"
		p:databaseType="oracle" />

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher"
		p:jobRepository-ref="jobRepository" />

	<bean id="delimitedFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="classpath:player.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names"
							value="id,lastName,firstName,position,birthYear,debutYear" />
						<property name="delimiter" value="," />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.spring.item.Mapper.PlayerFieldSetMapper"/>
				</property>				
			</bean>
		</property>
	</bean>
	
	
	<bean id="fixedFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="classpath:order.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names" value="isbn,quantity,price,customer" />
						<property name="columns" value="1-12,13-15,16-20,21-29" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.spring.item.Mapper.OrderFieldSetMapper"/>
				</property>				
			</bean>
		</property>
	</bean>
	
	<bean id="dbPlayerWriter" class="com.spring.item.PlayerWriter"
	      p:dao-ref="playerDAO" />
	      
	<bean id="dbOrderWriter" class="com.spring.item.OrderWriter"
		  p:dao-ref="orderDAO" />
		  
	<batch:job id="simpleJob">
		<batch:step id="delimitedFileToDBStep" next="fixedFileToDBStep">
			<batch:tasklet>
				<batch:chunk reader="delimitedFileItemReader"
				             writer="dbPlayerWriter"
				             commit-interval="2"/>
			</batch:tasklet>
		</batch:step>
		<batch:step id="fixedFileToDBStep">
			<batch:tasklet>
				<batch:chunk reader="fixedFileItemReader"
				             writer="dbOrderWriter"
				             commit-interval="2"/>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<bean id="runtime" class="com.spring.batch.JobRuntime"
		  p:job-ref="simpleJob"
		  p:jobLauncher-ref="jobLauncher" />
</beans>








